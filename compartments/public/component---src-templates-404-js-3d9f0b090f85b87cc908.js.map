{"version":3,"sources":["webpack:///./src/components/seo.js","webpack:///./src/templates/404.js"],"names":["SEO","description","lang","meta","title","ogImage","ogUrl","keywords","twitter_creator","site","standardMeta","name","content","siteMetadata","ogMeta","property","og_image","og_url","combinedMeta","filter","item","defaultTitle","htmlAttributes","titleTemplate","defaultProps","NotFoundPage"],"mappings":"qkBAYA,SAASA,EAAT,GAQe,IAPbC,EAOY,EAPZA,YACAC,EAMY,EANZA,KACAC,EAKY,EALZA,KACAC,EAIY,EAJZA,MACAC,EAGY,EAHZA,QACAC,EAEY,EAFZA,MAEAC,GAAY,EADZC,gBACY,EAAZD,UACQE,EADI,OACJA,KAiBFC,EAAe,CACnB,CACEC,KAAK,cACLC,QAASX,GAAeQ,EAAKI,aAAaZ,aAE5C,CACEU,KAAK,WACLC,QAASL,GAAYE,EAAKI,aAAaN,WAIrCO,EAAS,CACb,CACEC,SAAS,WACTH,QAASR,GAASK,EAAKI,aAAaT,OAEtC,CACEW,SAAS,iBACTH,QAASX,GAAeQ,EAAKI,aAAaZ,aAE5C,CACEc,SAAS,UACTH,QAAQ,WAEV,CACEG,SAAS,WACTH,QAASP,GAAWI,EAAKI,aAAaG,UAExC,CACED,SAAS,SACTH,QAASN,GAASG,EAAKI,aAAaI,SAIlCC,EAAe,UAAIR,EAAiBI,EAArB,EAAgCX,IAAMgB,QAAO,SAAAC,GAAI,OAAIA,EAAKR,WAE/E,OACE,kBAAC,IAAD,CACES,aAAcZ,EAAKI,aAAaT,MAChCkB,eAAgB,CACdpB,QAEFC,KAAMe,EACNd,MAAOA,EACPmB,cAAa,QAAUd,EAAKI,aAAaT,QAK/CJ,EAAIwB,aAAe,CACjBtB,KAAM,KACNC,KAAM,GACNF,YAAa,IAUAD,QCvFAyB,UARM,kBACnB,kBAAC,IAAD,KACE,kBAAC,EAAD,CAAKrB,MAAM,mBACX,yCACA,yF","file":"component---src-templates-404-js-3d9f0b090f85b87cc908.js","sourcesContent":["/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({\n  description,\n  lang,\n  meta,\n  title,\n  ogImage,\n  ogUrl,\n  twitter_creator,\n  keywords }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            og_image\n            og_url\n            twitter_creator\n            keywords\n          }\n        }\n      }\n    `\n  )\n\n  const standardMeta = [\n    {\n      name: `description`,\n      content: description || site.siteMetadata.description,\n    },\n    {\n      name: `keywords`,\n      content: keywords || site.siteMetadata.keywords,\n    },\n  ]\n\n  const ogMeta = [\n    {\n      property: `og:title`,\n      content: title || site.siteMetadata.title, // convert to an OG prop?\n    },\n    {\n      property: `og:description`,\n      content: description || site.siteMetadata.description,\n    },\n    {\n      property: `og:type`,\n      content: `website`,\n    },\n    {\n      property: `og:image`,\n      content: ogImage || site.siteMetadata.og_image,\n    },\n    {\n      property: `og:url`,\n      content: ogUrl || site.siteMetadata.og_url,\n    },\n  ]\n\n  const combinedMeta = [...standardMeta, ...ogMeta, ...meta].filter(item => item.content)\n\n  return (\n    <Helmet\n      defaultTitle={site.siteMetadata.title}\n      htmlAttributes={{\n        lang,\n      }}\n      meta={combinedMeta}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: 'en',\n  meta: [],\n  description: '',\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string,\n}\n\nexport default SEO\n","import React from \"react\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nconst NotFoundPage = () => (\n  <Layout>\n    <SEO title=\"404: Not found\" />\n    <h1>NOT FOUND</h1>\n    <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n  </Layout>\n)\n\nexport default NotFoundPage\n"],"sourceRoot":""}